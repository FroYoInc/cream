{
    "swagger": "2.0",
    "info": {
        "title": "Corpool",
        "description": "Get to know your co-workers while saving the world.",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "schemes": [
        "http"
    ],

    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/login": {
            "post": {
                "summary": "Log the user in.",
                "description": "\n This end point takes a user's email and password in a JSON object and then attempts to log them in and create a session object for them.",
                "parameters": [
                    {
                        "name": "LoginInfo",
                        "in": "body",
                        "description": "JSON object containing the email and password for the user to log in.",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/LoginInfo"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                          "$ref": "#/definitions/User"
                        }
                    },
                    "400":{
                        "description": "Bad Request. Invalid or missing parameters."
                    },
                    "401" : {
                        "description": "Unauthorized attempt.  User and password combination not found."
                    },
                    "403" : {
                        "description": "The user account has not been activated."
                    },
                    "423" : {
                        "description": "The user account is locked."
                    },
                    "500" : {
                        "description" : "Internal Server error."
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "Logout the user.",
                "description": "\nDestroys the current user's session and redirects them to '/' ",
                "tags": [
                    "User"
                ],
                "responses": {
                    "302": {
                        "description": "Logout successful, redirecting to '/' "
                    },
                    "500" : {
                        "description" : "Internal Server error."
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Creates a user account.",
                "description": "\nThis endpoint takes the user's userName, firstName, lastName, email and password in a JSON object and creates an account for them.",
                "parameters": [
                    {
                        "name": "NewAccountInfo",
                        "in": "body",
                        "description": "JSON object containing the userName, firstName, lastName, email and password for the account to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewAccountInfo"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request. Not a valid email or userName."
                    },
                    "409": {
                        "description": "Conflict error.  Email or userName already exists."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/carpools/request": {
            "post": {
                "summary": "Request to join carpool",
                "description": "\nMakes a request for the user to join a carpool ",
                "parameters": [
                    {
                        "name": "carpoolRequest",
                        "in": "body",
                        "description": "The id of the carpool that the user wishes to join",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/carpoolRequest"
                        }
                    }
                ],
                "tags": [
                    "Carpool"
                ],
                "responses": {
                    "201": {
                        "description": "Request successfully created."
                    },
                    "400": {
                        "description": "No carpool id provided."
                    },
                    "401": {
                        "description": "Unauthorized attempt, user must be logged in to make a request."
                    },
                    "409": {
                        "description": "Conflict error.  User already has a request to join this carpool."
                    },
                    "500" : {
                        "description" : "Internal Server error. Unable to make request"
                    }
                }
            }
        }
    },
    "definitions": {
        "NewAccountInfo": {
            "required": [
                "userName",
                "firstName",
                "lastName",
                "email",
                "password"
            ],
            "properties": {
                "userName": {"required": true, "type": "string"},
                "firstName": {"required": true, "type": "string"},
                "lastName": {"required": true, "type": "string"},
                "email": {"required": true, "type": "string"},
                "password": {"required": true, "type": "string"}
            }
        },
        "carpoolRequest" : {
            "required": [
                "carpoolID"
            ],
            "properties" : {
                "carpoolID" : { "required": true, "type" :"string"}
            }
        },
        "LoginInfo" : {
            "required": [
                "email",
                "password"
            ],
            "properties" : {
                "email" : { "required": true, "type" :"string"},
                "password" : { "required": true, "type" :"string"}
            }
        },
        "User": {
            "required": [
                "userID",
                "firstName",
                "lastName",
                "userName",
                "email"

            ],
            "properties" : {
                "userID" : {"type" :"string"},
                "firstName" : {"type" :"string"},
                "lastName" : {"type" :"string"},
                "userName" : {"type" :"string"},
                "email" : {"type" :"string"}
            }
        },

        "Carpool" : {
            "required": [
                "name",
                "users",
                "campus",
                "description",
                "id"

            ],
            "properties" : {
                "name" : {"type" : "string"},
                "users": {
                    "type": "array", 
                    "items" : {
                        "$ref" :"#/definitions/User"
                    }
                },
                "campus" : { "$ref": "#/definitions/Campus" },
                "description" : {"type" : "string"},
                "id" : {"type" :"string"}
            }
        },
        "Campus" : {
            "required": [
                "name",
                "id",
                "location"
            ],
            "properties" : {
                "name" : {"type" :"string"},
                "id" : {"type" :"string"},
                "location" : {"$ref":"#/definitions/GeoCode"}
            }
        },
        "GeoCode": {
            "required": [
                "x",
                "y"
            ],
            "properties" : {
                "x" : {"type" :"number"},
                "y" : {"type" :"number"}
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}