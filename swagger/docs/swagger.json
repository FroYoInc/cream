{
    "swagger": "2.0",
    "info": {
        "title": "Corpool",
        "description": "Get to know your co-workers while saving the world.",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "schemes": [
        "http"
    ],

    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/login": {
            "post": {
                "summary": "Log the user in.",
                "description": "\n This end point takes a user's email and password in a JSON object and then attempts to log them in and create a session object for them.",
                "parameters": [
                    {
                        "name": "LoginInfo",
                        "in": "body",
                        "description": "JSON object containing the email and password for the user to log in.",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/LoginInfo"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                          "$ref": "#/definitions/User"
                        }
                    },
                    "400":{
                        "description": "Bad Request. Invalid or missing parameters."
                    },
                    "401" : {
                        "description": "Unauthorized attempt.  User and password combination not found."
                    },
                    "403" : {
                        "description": "The user account has not been activated."
                    },
                    "423" : {
                        "description": "The user account is locked."
                    },
                    "500" : {
                        "description" : "Internal Server error."
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "Logout the user.",
                "description": "\nDestroys the current user's session and redirects them to '/' ",
                "tags": [
                    "User"
                ],
                "responses": {
                    "302": {
                        "description": "Logout successful, redirecting to '/' "
                    },
                    "500" : {
                        "description" : "Internal Server error."
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Creates a user account.",
                "description": "\nThis endpoint takes the user's userName, firstName, lastName, email and password in a JSON object and creates an account for them.",
                "parameters": [
                    {
                        "name": "NewAccountInfo",
                        "in": "body",
                        "description": "JSON object containing the userName, firstName, lastName, email and password for the account to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewAccountInfo"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request. Not a valid email or userName."
                    },
                    "409": {
                        "description": "Conflict error.  Email or userName already exists."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },

        "/activate/{activationCode}": {
            "get": {
                "summary" : "Activates User account",
                "description" : "\nThis endpoint takes random generated activation code from email link and switches the _isAccountActivated value from false to true, to call this endpoint make a get request to /activation/activationCode where activationCode is the code you wish to user for activation.",
                "parameters": [
                    {
                        "name": "activationCode",
                        "in": "path",
                        "description": "Activation code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags" : ["User"],
                "responses" : {
                    "302" : {
                        "description" : "Redirect to /login on successful activation and redirect to /invalid-activation otherwise"
                    }
                }
            }
        },
        "/carpools": {
            "post": {
                "summary": "Creates a Carpool.",
                "description": "\nThis endpoint takes Carpool name, campusName, owner and description in a JSON object and creates a carpool.",
                "parameters": [
                    {
                        "name": "NewCarpool",
                        "in": "body",
                        "description": "JSON object containing Carpool name, campus name, owner and description.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewCarpool"
                        }
                    }
                ],
                "tags": [
                    "Carpool"
                ],
                "responses": {
                    "201": {
                        "description": "Carpool created successfully.",
                        "schema": {
                            "$ref": "#/definitions/Carpool"
                        }
                    },
                    "406": {
                        "description": "Carpool owner or campus not found"
                    },
                    "409": {
                        "description": "Carpool already exists."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/carpools/{carpoolid}": {
            "get": {
                "summary" : "Get Carpool by id",
                "description" : "\nThis endpoint retrives a single Carpool given its id",
                "parameters": [
                    {
                        "name": "carpoolid",
                        "in": "path",
                        "description": "Carpool id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags" : ["Carpool"],
                "responses" : {
                    "500" : {
                        "description" : "Internal server error"
                    },
                    "404" : {
                        "description" : "Carpool with given id not found"
                    },
                    "200": {
                        "description" : "Carpool found",
                        "schema": {
                            "$ref": "#/definitions/Carpool"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "NewAccountInfo": {
            "required": [
                "userName",
                "firstName",
                "lastName",
                "email",
                "password"
            ],
            "properties": {
                "userName": {"required": true, "type": "string"},
                "firstName": {"required": true, "type": "string"},
                "lastName": {"required": true, "type": "string"},
                "email": {"required": true, "type": "string"},
                "password": {"required": true, "type": "string"}
            }
        },
        "NewCarpool": {
            "required": [
                "name",
                "description",
                "campus",
                "owner"
            ],
            "properties": {
                "name": {"required": true, "type": "string"},
                "description": {"required": true, "type": "string"},
                "campus": {"required": true, "type": "string"},
                "owner": {"required": true, "type": "string"}
            }
        },
        "LoginInfo" : {
            "required": [
                "email",
                "password"
            ],
            "properties" : {
                "email" : { "required": true, "type" :"string"},
                "password" : { "required": true, "type" :"string"}
            }
        },
        "User": {
            "required": [
                "href",
                "firstName",
                "lastName",
                "userName",
                "email"

            ],
            "properties" : {
                "href" : {"type" :"string"},
                "firstName" : {"type" :"string"},
                "lastName" : {"type" :"string"},
                "userName" : {"type" :"string"},
                "email" : {"type" :"string"}
            }
        },

        "Carpool" : {
            "required": [
                "name",
                "owner",
                "participants",
                "campus",
                "description",
                "href"

            ],
            "properties" : {
                "name" : {"type" : "string"},
                "owner": {"$ref": "#/definitions/User"},
                "participants": {
                    "type": "array",
                    "items" : {
                        "$ref" :"#/definitions/User"
                    }
                },
                "campus" : { "$ref": "#/definitions/Campus" },
                "description" : {"type" : "string"},
                "href" : {"type" :"string"}
            }
        },
        "Campus" : {
            "required": [
                "name",
                "href",
                "location"
            ],
            "properties" : {
                "name" : {"type" :"string"},
                "href" : {"type" :"string"},
                "location" : {"$ref":"#/definitions/GeoCode"}
            }
        },
        "GeoCode": {
            "required": [
                "long",
                "lat"
            ],
            "properties" : {
                "long" : {"type" :"number"},
                "lat" : {"type" :"number"}
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
